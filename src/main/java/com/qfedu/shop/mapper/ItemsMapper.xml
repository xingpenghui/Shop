<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfedu.mapper.ItemsMapper">
  <resultMap id="BaseResultMap" type="com.qfedu.domain.Items">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="oid" jdbcType="INTEGER" property="oid" />
    <result column="goodsId" jdbcType="INTEGER" property="goodsid" />
    <result column="createDate" jdbcType="DATE" property="createdate" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="total_price" jdbcType="DOUBLE" property="totalPrice" />
  </resultMap>
  <sql id="Base_Column_List">
    id, oid, goodsId, createDate, count, price, state, total_price
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_items
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_items
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qfedu.domain.Items">
    insert into t_items (id, oid, goodsId, 
      createDate, count, price, 
      state, total_price)
    values (#{id,jdbcType=INTEGER}, #{oid,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, 
      #{createdate,jdbcType=DATE}, #{count,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{state,jdbcType=INTEGER}, #{totalPrice,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.qfedu.domain.Items">
    insert into t_items
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="oid != null">
        oid,
      </if>
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=DATE},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qfedu.domain.Items">
    update t_items
    <set>
      <if test="oid != null">
        oid = #{oid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        goodsId = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=DATE},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qfedu.domain.Items">
    update t_items
    set oid = #{oid,jdbcType=INTEGER},
      goodsId = #{goodsid,jdbcType=INTEGER},
      createDate = #{createdate,jdbcType=DATE},
      count = #{count,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>